{"version":3,"file":"js/assets/libs/flatpickr/dist/plugins/minMaxTimePlugin-4ed81943d49473db2182.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/assets/libs/flatpickr/dist/plugins/minMaxTimePlugin.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/assets/libs/flatpickr/dist/plugins/minMaxTimePlugin.js\");\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.minMaxTimePlugin = factory());\n}(this, function () { 'use strict';\n\n  var pad = function (number) { return (\"0\" + number).slice(-2); };\n  var int = function (bool) { return (bool === true ? 1 : 0); };\n\n  var monthToStr = function (monthNumber, shorthand, locale) { return locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber]; };\n  var formats = {\n      // get the date in UTC\n      Z: function (date) { return date.toISOString(); },\n      // weekday name, short, e.g. Thu\n      D: function (date, locale, options) {\n          return locale.weekdays.shorthand[formats.w(date, locale, options)];\n      },\n      // full month name e.g. January\n      F: function (date, locale, options) {\n          return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n      },\n      // padded hour 1-12\n      G: function (date, locale, options) {\n          return pad(formats.h(date, locale, options));\n      },\n      // hours with leading zero e.g. 03\n      H: function (date) { return pad(date.getHours()); },\n      // day (1-30) with ordinal suffix e.g. 1st, 2nd\n      J: function (date, locale) {\n          return locale.ordinal !== undefined\n              ? date.getDate() + locale.ordinal(date.getDate())\n              : date.getDate();\n      },\n      // AM/PM\n      K: function (date, locale) { return locale.amPM[int(date.getHours() > 11)]; },\n      // shorthand month e.g. Jan, Sep, Oct, etc\n      M: function (date, locale) {\n          return monthToStr(date.getMonth(), true, locale);\n      },\n      // seconds 00-59\n      S: function (date) { return pad(date.getSeconds()); },\n      // unix timestamp\n      U: function (date) { return date.getTime() / 1000; },\n      W: function (date, _, options) {\n          return options.getWeek(date);\n      },\n      // full year e.g. 2016\n      Y: function (date) { return date.getFullYear(); },\n      // day in month, padded (01-30)\n      d: function (date) { return pad(date.getDate()); },\n      // hour from 1-12 (am/pm)\n      h: function (date) { return (date.getHours() % 12 ? date.getHours() % 12 : 12); },\n      // minutes, padded with leading zero e.g. 09\n      i: function (date) { return pad(date.getMinutes()); },\n      // day in month (1-30)\n      j: function (date) { return date.getDate(); },\n      // weekday name, full, e.g. Thursday\n      l: function (date, locale) {\n          return locale.weekdays.longhand[date.getDay()];\n      },\n      // padded month number (01-12)\n      m: function (date) { return pad(date.getMonth() + 1); },\n      // the month number (1-12)\n      n: function (date) { return date.getMonth() + 1; },\n      // seconds 0-59\n      s: function (date) { return date.getSeconds(); },\n      // Unix Milliseconds\n      u: function (date) { return date.getTime(); },\n      // number of the day of the week\n      w: function (date) { return date.getDay(); },\n      // last two digits of year e.g. 16 for 2016\n      y: function (date) { return String(date.getFullYear()).substring(2); }\n  };\n\n  var defaults = {\n      _disable: [],\n      _enable: [],\n      allowInput: false,\n      altFormat: \"F j, Y\",\n      altInput: false,\n      altInputClass: \"form-control input\",\n      animate: typeof window === \"object\" &&\n          window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n      ariaDateFormat: \"F j, Y\",\n      clickOpens: true,\n      closeOnSelect: true,\n      conjunction: \", \",\n      dateFormat: \"Y-m-d\",\n      defaultHour: 12,\n      defaultMinute: 0,\n      defaultSeconds: 0,\n      disable: [],\n      disableMobile: false,\n      enable: [],\n      enableSeconds: false,\n      enableTime: false,\n      errorHandler: function (err) {\n          return typeof console !== \"undefined\" && console.warn(err);\n      },\n      getWeek: function (givenDate) {\n          var date = new Date(givenDate.getTime());\n          date.setHours(0, 0, 0, 0);\n          // Thursday in current week decides the year.\n          date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n          // January 4 is always in week 1.\n          var week1 = new Date(date.getFullYear(), 0, 4);\n          // Adjust to Thursday in week 1 and count number of weeks from date to week1.\n          return (1 +\n              Math.round(((date.getTime() - week1.getTime()) / 86400000 -\n                  3 +\n                  ((week1.getDay() + 6) % 7)) /\n                  7));\n      },\n      hourIncrement: 1,\n      ignoredFocusElements: [],\n      inline: false,\n      locale: \"default\",\n      minuteIncrement: 5,\n      mode: \"single\",\n      monthSelectorType: \"dropdown\",\n      nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n      noCalendar: false,\n      now: new Date(),\n      onChange: [],\n      onClose: [],\n      onDayCreate: [],\n      onDestroy: [],\n      onKeyDown: [],\n      onMonthChange: [],\n      onOpen: [],\n      onParseConfig: [],\n      onReady: [],\n      onValueUpdate: [],\n      onYearChange: [],\n      onPreCalendarPosition: [],\n      plugins: [],\n      position: \"auto\",\n      positionElement: undefined,\n      prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n      shorthandCurrentMonth: false,\n      showMonths: 1,\n      static: false,\n      time_24hr: false,\n      weekNumbers: false,\n      wrap: false\n  };\n\n  var english = {\n      weekdays: {\n          shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n          longhand: [\n              \"Sunday\",\n              \"Monday\",\n              \"Tuesday\",\n              \"Wednesday\",\n              \"Thursday\",\n              \"Friday\",\n              \"Saturday\",\n          ]\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"May\",\n              \"Jun\",\n              \"Jul\",\n              \"Aug\",\n              \"Sep\",\n              \"Oct\",\n              \"Nov\",\n              \"Dec\",\n          ],\n          longhand: [\n              \"January\",\n              \"February\",\n              \"March\",\n              \"April\",\n              \"May\",\n              \"June\",\n              \"July\",\n              \"August\",\n              \"September\",\n              \"October\",\n              \"November\",\n              \"December\",\n          ]\n      },\n      daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n      firstDayOfWeek: 0,\n      ordinal: function (nth) {\n          var s = nth % 100;\n          if (s > 3 && s < 21)\n              return \"th\";\n          switch (s % 10) {\n              case 1:\n                  return \"st\";\n              case 2:\n                  return \"nd\";\n              case 3:\n                  return \"rd\";\n              default:\n                  return \"th\";\n          }\n      },\n      rangeSeparator: \" to \",\n      weekAbbreviation: \"Wk\",\n      scrollTitle: \"Scroll to increment\",\n      toggleTitle: \"Click to toggle\",\n      amPM: [\"AM\", \"PM\"],\n      yearAriaLabel: \"Year\",\n      hourAriaLabel: \"Hour\",\n      minuteAriaLabel: \"Minute\",\n      time_24hr: false\n  };\n\n  var createDateFormatter = function (_a) {\n      var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;\n      return function (dateObj, frmt, overrideLocale) {\n          var locale = overrideLocale || l10n;\n          if (config.formatDate !== undefined) {\n              return config.formatDate(dateObj, frmt, locale);\n          }\n          return frmt\n              .split(\"\")\n              .map(function (c, i, arr) {\n              return formats[c] && arr[i - 1] !== \"\\\\\"\n                  ? formats[c](dateObj, locale, config)\n                  : c !== \"\\\\\"\n                      ? c\n                      : \"\";\n          })\n              .join(\"\");\n      };\n  };\n  /**\n   * Compute the difference in dates, measured in ms\n   */\n  function compareDates(date1, date2, timeless) {\n      if (timeless === void 0) { timeless = true; }\n      if (timeless !== false) {\n          return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\n              new Date(date2.getTime()).setHours(0, 0, 0, 0));\n      }\n      return date1.getTime() - date2.getTime();\n  }\n  /**\n   * Compute the difference in times, measured in ms\n   */\n  function compareTimes(date1, date2) {\n      return (3600 * (date1.getHours() - date2.getHours()) +\n          60 * (date1.getMinutes() - date2.getMinutes()) +\n          date1.getSeconds() -\n          date2.getSeconds());\n  }\n\n  function minMaxTimePlugin(config) {\n      if (config === void 0) { config = {}; }\n      var state = {\n          formatDate: createDateFormatter({}),\n          tableDateFormat: config.tableDateFormat || \"Y-m-d\",\n          defaults: {\n              minTime: undefined,\n              maxTime: undefined\n          }\n      };\n      function findDateTimeLimit(date) {\n          if (config.table !== undefined) {\n              return config.table[state.formatDate(date, state.tableDateFormat)];\n          }\n          return config.getTimeLimits && config.getTimeLimits(date);\n      }\n      return function (fp) {\n          return {\n              onReady: function () {\n                  state.formatDate = this.formatDate;\n                  state.defaults = {\n                      minTime: this.config.minTime && state.formatDate(this.config.minTime, \"H:i\"),\n                      maxTime: this.config.maxTime && state.formatDate(this.config.maxTime, \"H:i\")\n                  };\n                  fp.loadedPlugins.push(\"minMaxTime\");\n              },\n              onChange: function () {\n                  var latest = this.latestSelectedDateObj;\n                  var matchingTimeLimit = latest && findDateTimeLimit(latest);\n                  if (latest && matchingTimeLimit !== undefined) {\n                      this.set(matchingTimeLimit);\n                      fp.config.minTime.setFullYear(latest.getFullYear());\n                      fp.config.maxTime.setFullYear(latest.getFullYear());\n                      fp.config.minTime.setMonth(latest.getMonth());\n                      fp.config.maxTime.setMonth(latest.getMonth());\n                      fp.config.minTime.setDate(latest.getDate());\n                      fp.config.maxTime.setDate(latest.getDate());\n                      if (compareDates(latest, fp.config.maxTime, false) > 0) {\n                          fp.setDate(new Date(latest.getTime()).setHours(fp.config.maxTime.getHours(), fp.config.maxTime.getMinutes(), fp.config.maxTime.getSeconds(), fp.config.maxTime.getMilliseconds()), false);\n                      }\n                      else if (compareDates(latest, fp.config.minTime, false) < 0)\n                          fp.setDate(new Date(latest.getTime()).setHours(fp.config.minTime.getHours(), fp.config.minTime.getMinutes(), fp.config.minTime.getSeconds(), fp.config.minTime.getMilliseconds()), false);\n                  }\n                  else {\n                      var newMinMax = state.defaults || {\n                          minTime: undefined,\n                          maxTime: undefined\n                      };\n                      this.set(newMinMax);\n                      if (!latest)\n                          return;\n                      var _a = fp.config, minTime = _a.minTime, maxTime = _a.maxTime;\n                      if (minTime && compareTimes(latest, minTime) < 0) {\n                          fp.setDate(new Date(latest.getTime()).setHours(minTime.getHours(), minTime.getMinutes(), minTime.getSeconds(), minTime.getMilliseconds()), false);\n                      }\n                      else if (maxTime && compareTimes(latest, maxTime) > 0) {\n                          fp.setDate(new Date(latest.getTime()).setHours(maxTime.getHours(), maxTime.getMinutes(), maxTime.getSeconds(), maxTime.getMilliseconds()));\n                      }\n                      //\n                  }\n              }\n          };\n      };\n  }\n\n  return minMaxTimePlugin;\n\n}));\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEA;AAyEA;AACA;AACA;AACA;AAFA;AAYA;AACA;AAcA;AAfA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApEA;AACA;AAsEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA3CA;AA6CA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}