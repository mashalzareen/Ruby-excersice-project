{"ast":null,"code":"module.exports = function (name, opts) {\n  var engine,\n      defaults = {\n    idProperty: '_id',\n    logger: {\n      info: console.info,\n      verbose: console.info\n    },\n    engine: undefined,\n    debug: true\n  },\n      options = Object.assign({}, defaults, opts);\n\n  if (typeof name !== 'string') {\n    throw new Error('A string must be provided for \\'name\\'');\n  } // If no engine is passed then default to the memory engine.\n\n\n  engine = options.engine || require('./memory-engine')({\n    idProperty: options.idProperty\n  }); // Only log in debug mode\n\n  if (options.debug) {\n    engine.on('create', function (object) {\n      options.logger.info('Creating \\'' + name + '\\'', JSON.stringify(object));\n    });\n    engine.on('update', function (object, overwrite) {\n      options.logger.info('Updating \\'' + name + '\\'', JSON.stringify(object), ' with overwrite ', overwrite);\n    });\n    engine.on('updateMany', function (query) {\n      options.logger.info('Updating many \\'' + name + '\\'', JSON.stringify(query));\n    });\n    engine.on('delete', function (id) {\n      options.logger.info('Deleting \\'' + name + '\\'', id);\n    });\n    engine.on('deleteMany', function (query) {\n      options.logger.info('Deleting many \\'' + name + '\\'', JSON.stringify(query));\n    });\n    engine.on('read', function (id) {\n      options.logger.info('Reading \\'' + name + '\\'', id);\n    });\n    engine.on('find', function (query, queryOptions) {\n      options.logger.info('Finding \\'' + name + '\\'', JSON.stringify(query), JSON.stringify(queryOptions));\n    });\n    engine.on('findOne', function (query, queryOptions) {\n      options.logger.info('Finding One \\'' + name + '\\'', JSON.stringify(query), JSON.stringify(queryOptions));\n    });\n    engine.on('count', function (query) {\n      options.logger.info('Count \\'' + name + '\\'', JSON.stringify(query));\n    });\n    engine.on('error', function (error) {\n      options.logger.error('Error with \\'' + name + '\\'', error);\n    });\n  }\n\n  return engine;\n};","map":{"version":3,"sources":["/home/mishal/Desktop/ruby/login/app/javascript/packs/assets/libs/save/lib/save.js"],"names":["module","exports","name","opts","engine","defaults","idProperty","logger","info","console","verbose","undefined","debug","options","Object","assign","Error","require","on","object","JSON","stringify","overwrite","query","id","queryOptions","error"],"mappings":"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","sourcesContent":["module.exports = function (name, opts) {\n\n  var engine\n    , defaults =\n      { idProperty: '_id'\n      , logger: { info: console.info, verbose: console.info }\n      , engine: undefined\n      , debug: true\n      }\n    , options = Object.assign({}, defaults, opts)\n\n  if (typeof name !== 'string') {\n    throw new Error('A string must be provided for \\'name\\'')\n  }\n\n  // If no engine is passed then default to the memory engine.\n  engine = options.engine || require('./memory-engine')(\n    { idProperty: options.idProperty })\n\n  // Only log in debug mode\n  if (options.debug) {\n\n    engine.on('create', function (object) {\n      options.logger.info('Creating \\'' + name + '\\'', JSON.stringify(object))\n    })\n\n    engine.on('update', function (object, overwrite) {\n      options.logger.info('Updating \\'' + name + '\\'', JSON.stringify(object)\n        , ' with overwrite ', overwrite)\n    })\n\n    engine.on('updateMany', function (query) {\n      options.logger.info('Updating many \\'' + name + '\\'', JSON.stringify(query))\n    })\n\n    engine.on('delete', function (id) {\n      options.logger.info('Deleting \\'' + name + '\\'', id)\n    })\n\n    engine.on('deleteMany', function (query) {\n      options.logger.info('Deleting many \\'' + name + '\\'', JSON.stringify(query))\n    })\n\n    engine.on('read', function (id) {\n      options.logger.info('Reading \\'' + name + '\\'', id)\n    })\n\n    engine.on('find', function (query, queryOptions) {\n      options.logger.info('Finding \\'' + name + '\\'', JSON.stringify(query) , JSON.stringify(queryOptions))\n    })\n\n    engine.on('findOne', function (query, queryOptions) {\n      options.logger.info('Finding One \\'' + name + '\\'', JSON.stringify(query) , JSON.stringify(queryOptions))\n    })\n\n    engine.on('count', function (query) {\n      options.logger.info('Count \\'' + name + '\\'', JSON.stringify(query))\n    })\n\n    engine.on('error', function (error) {\n      options.logger.error('Error with \\'' + name + '\\'', error)\n    })\n  }\n\n  return engine\n}\n"]},"metadata":{},"sourceType":"module"}